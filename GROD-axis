%% Script for plotting the crystal directions
%Creator Supriya and Shao-Pu 
%Environment: MTEX toolbox
%Version of MTEX tested: MTEX 5.2.beta2

%% Definition of the crystalSymmetry of Mg
cs = crystalSymmetry('hexagonal',[3.2, 3.2, 5.2], 'X||a*', 'Y||b', 'Z||c*', 'mineral', 'Mg')
ss = specimenSymmetry('orthorhombic')

% 
% plotting convention
setMTEXpref('xAxisDirection','east');
setMTEXpref('zAxisDirection','intoPlane');

%% Construct crystal directions in row vectors

%import the txt file and change the name to m

d=size(m)
skip=0
for i=1:d(1,1)
        u= 0.3333 * [2 * m(i,6) - m(i,7)]
v=0.3333 * [2 * m(i,7) - m(i,6)]
t=-(u+v)
w=m(i,8)
r(i) = Miller(u,v,t,w,cs,'UVTW') %write them into a group r
pos=d(1,1)-i %to count
end
%% Symmetrise
R = r.symmetrise('antipodal')

%% Create two graphs

figure

%% Plot R 
% 
% 
plot(r,'upper','grid','grid_res',30*degree,'projection','eangle','MarkerSize',2);

annotate([vector3d.X,vector3d.Y,vector3d.Z],'label',{'X','Y','Z'});

mtexTitle('Discrete plot')

hold on

%% Plot R as a contour plot

nextAxis
plot(R,'upper','contourf', 0:0.2:4, 'linestyle','none','ShowText','off');
% alternative: plot(R,'upper','contourf','linecolor','black','linewidth',2, 'ShowText','on', 'colorRange', [0,3], axesPos);


annotate([vector3d.X,vector3d.Y,vector3d.Z],'label',{'X','Y','Z'});
mtexColorbar;
mtexTitle('Contour plot');

hold on

%% Unit triangle
plot(Miller(1,0,-1,0,cs,'UVTW').symmetrise,'upper','color','r','MarkerSize',6,'MarkerFaceColor','b','labeled');

figure('color','r')
hold on;
plot(Miller(2,-1,-1,0,cs,'UVTW').symmetrise,'upper','MarkerSize',6,'MarkerFaceColor','g','labeled')
plot(Miller(0,0,0,1,cs,'UVTW').symmetrise,'upper','MarkerSize',6,'MarkerFaceColor','r','labeled')
plot(Miller(0,1,-1,2,cs,'UVTW').symmetrise,'upper','MarkerSize',6,'MarkerFaceColor','[1 0.2 0.6]','labeled')
plot(Miller(13,-8,-5,3,cs,'UVTW').symmetrise,'upper','MarkerSize',6,'MarkerFaceColor','[0.49 1 0.33]','labeled')
hold off

%% save workspace
filename= 'sample-1-reg-1-grod-kam.mat'
save(filename)

%% creat and plot Random direction

for i= 1:10000
r_rnd2(i)=Miller(vector3d.rand,cs)
end
R1 = r_rnd2.symmetrise('antipodal')

% nextAxis
plot(r_rnd2,'upper','grid','grid_res',30*degree,'projection','eangle','MarkerSize',2)
plot(R1,'upper','contourf', 0:0.2:4, 'linestyle','none','ShowText','off');


annotate([vector3d.X,vector3d.Y,vector3d.Z],'label',{'X','Y','Z'});
%% End of script
% dividision of R/R1 in the PDF gives the normalised GORD axis density on the stereoghraphic projection in crystal frame
